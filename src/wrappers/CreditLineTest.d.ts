/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from 'ethers';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';
import { TypedEventFilter, TypedEvent, TypedListener } from './commons';

interface CreditLineTestInterface extends ethers.utils.Interface {
  functions: {
    'IS_TEST()': FunctionFragment;
    'SetUpAllContracts()': FunctionFragment;
    'SetUpCreditLineActors()': FunctionFragment;
    'SetUpCreditLines()': FunctionFragment;
    'SetUpGlobalActors()': FunctionFragment;
    'SetUpPoolActors()': FunctionFragment;
    'SetUpPooledCreditLines()': FunctionFragment;
    'createAdmin()': FunctionFragment;
    'createBob()': FunctionFragment;
    'createCreditLineBorrower()': FunctionFragment;
    'createCreditLineLender()': FunctionFragment;
    'createCreditLineLiquidator()': FunctionFragment;
    'createFakeAdmin()': FunctionFragment;
    'createFakeVerifier()': FunctionFragment;
    'createPoolBorrower()': FunctionFragment;
    'createPoolLenders()': FunctionFragment;
    'createPoolLiquidator()': FunctionFragment;
    'createVerifier()': FunctionFragment;
    'create_creditLineReqeuest()': FunctionFragment;
    'deployCompoundYield()': FunctionFragment;
    'deployCreditLines()': FunctionFragment;
    'deployNoYield()': FunctionFragment;
    'deployPriceOracle()': FunctionFragment;
    'deployProtocolFeeCollector()': FunctionFragment;
    'deployRepayments()': FunctionFragment;
    'deploySavingsAccount()': FunctionFragment;
    'deployStrategyRegistry()': FunctionFragment;
    'deployTwitterVerifier()': FunctionFragment;
    'deployVerification()': FunctionFragment;
    'failed()': FunctionFragment;
    'mint(address,address,uint256)': FunctionFragment;
    'restrictToRange(uint256,uint256,uint256)': FunctionFragment;
    'setUp()': FunctionFragment;
    'setUpLenderPools()': FunctionFragment;
    'testFail_invalidBorrower_1()': FunctionFragment;
    'testFail_invalidBorrower_2()': FunctionFragment;
    'testFail_invalidCollateralRatio()': FunctionFragment;
    'testFail_invalidLender_1()': FunctionFragment;
    'testFail_invalidLender_2()': FunctionFragment;
    'test_mint()': FunctionFragment;
    'test_validRequest_asBorrower()': FunctionFragment;
    'test_validRequest_asLender()': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'IS_TEST', values?: undefined): string;
  encodeFunctionData(functionFragment: 'SetUpAllContracts', values?: undefined): string;
  encodeFunctionData(functionFragment: 'SetUpCreditLineActors', values?: undefined): string;
  encodeFunctionData(functionFragment: 'SetUpCreditLines', values?: undefined): string;
  encodeFunctionData(functionFragment: 'SetUpGlobalActors', values?: undefined): string;
  encodeFunctionData(functionFragment: 'SetUpPoolActors', values?: undefined): string;
  encodeFunctionData(functionFragment: 'SetUpPooledCreditLines', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createAdmin', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createBob', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createCreditLineBorrower', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createCreditLineLender', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createCreditLineLiquidator', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createFakeAdmin', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createFakeVerifier', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createPoolBorrower', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createPoolLenders', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createPoolLiquidator', values?: undefined): string;
  encodeFunctionData(functionFragment: 'createVerifier', values?: undefined): string;
  encodeFunctionData(functionFragment: 'create_creditLineReqeuest', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployCompoundYield', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployCreditLines', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployNoYield', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployPriceOracle', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployProtocolFeeCollector', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployRepayments', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deploySavingsAccount', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployStrategyRegistry', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployTwitterVerifier', values?: undefined): string;
  encodeFunctionData(functionFragment: 'deployVerification', values?: undefined): string;
  encodeFunctionData(functionFragment: 'failed', values?: undefined): string;
  encodeFunctionData(functionFragment: 'mint', values: [string, string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'restrictToRange', values: [BigNumberish, BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'setUp', values?: undefined): string;
  encodeFunctionData(functionFragment: 'setUpLenderPools', values?: undefined): string;
  encodeFunctionData(functionFragment: 'testFail_invalidBorrower_1', values?: undefined): string;
  encodeFunctionData(functionFragment: 'testFail_invalidBorrower_2', values?: undefined): string;
  encodeFunctionData(functionFragment: 'testFail_invalidCollateralRatio', values?: undefined): string;
  encodeFunctionData(functionFragment: 'testFail_invalidLender_1', values?: undefined): string;
  encodeFunctionData(functionFragment: 'testFail_invalidLender_2', values?: undefined): string;
  encodeFunctionData(functionFragment: 'test_mint', values?: undefined): string;
  encodeFunctionData(functionFragment: 'test_validRequest_asBorrower', values?: undefined): string;
  encodeFunctionData(functionFragment: 'test_validRequest_asLender', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'IS_TEST', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'SetUpAllContracts', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'SetUpCreditLineActors', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'SetUpCreditLines', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'SetUpGlobalActors', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'SetUpPoolActors', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'SetUpPooledCreditLines', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createAdmin', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createBob', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createCreditLineBorrower', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createCreditLineLender', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createCreditLineLiquidator', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createFakeAdmin', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createFakeVerifier', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createPoolBorrower', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createPoolLenders', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createPoolLiquidator', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createVerifier', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'create_creditLineReqeuest', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployCompoundYield', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployCreditLines', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployNoYield', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployPriceOracle', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployProtocolFeeCollector', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployRepayments', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deploySavingsAccount', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployStrategyRegistry', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployTwitterVerifier', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'deployVerification', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'failed', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'mint', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'restrictToRange', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setUp', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setUpLenderPools', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'testFail_invalidBorrower_1', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'testFail_invalidBorrower_2', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'testFail_invalidCollateralRatio', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'testFail_invalidLender_1', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'testFail_invalidLender_2', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'test_mint', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'test_validRequest_asBorrower', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'test_validRequest_asLender', data: BytesLike): Result;

  events: {
    'log(string)': EventFragment;
    'log_address(address)': EventFragment;
    'log_bytes(bytes)': EventFragment;
    'log_bytes32(bytes32)': EventFragment;
    'log_int(int256)': EventFragment;
    'log_named_address(string,address)': EventFragment;
    'log_named_bytes(string,bytes)': EventFragment;
    'log_named_bytes32(string,bytes32)': EventFragment;
    'log_named_decimal_int(string,int256,uint256)': EventFragment;
    'log_named_decimal_uint(string,uint256,uint256)': EventFragment;
    'log_named_int(string,int256)': EventFragment;
    'log_named_string(string,string)': EventFragment;
    'log_named_uint(string,uint256)': EventFragment;
    'log_string(string)': EventFragment;
    'log_uint(uint256)': EventFragment;
    'logs(bytes)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'log'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_address'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_bytes'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_bytes32'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_int'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_address'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_bytes'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_bytes32'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_decimal_int'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_decimal_uint'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_int'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_string'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_named_uint'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_string'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'log_uint'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'logs'): EventFragment;
}

export class CreditLineTest extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: CreditLineTestInterface;

  functions: {
    IS_TEST(overrides?: CallOverrides): Promise<[boolean]>;

    'IS_TEST()'(overrides?: CallOverrides): Promise<[boolean]>;

    SetUpAllContracts(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'SetUpAllContracts()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    SetUpCreditLineActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'SetUpCreditLineActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    SetUpCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'SetUpCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    SetUpGlobalActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'SetUpGlobalActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    SetUpPoolActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'SetUpPoolActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    SetUpPooledCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'SetUpPooledCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createBob(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createBob()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createCreditLineBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createCreditLineBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createCreditLineLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createCreditLineLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createCreditLineLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createCreditLineLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createFakeAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createFakeAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createFakeVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createFakeVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createPoolBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createPoolBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createPoolLenders(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createPoolLenders()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createPoolLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createPoolLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    createVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'createVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    create_creditLineReqeuest(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'create_creditLineReqeuest()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployCompoundYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployCompoundYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployNoYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployNoYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployPriceOracle(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployPriceOracle()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployProtocolFeeCollector(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployProtocolFeeCollector()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployRepayments(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployRepayments()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deploySavingsAccount(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deploySavingsAccount()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployStrategyRegistry(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployStrategyRegistry()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployTwitterVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployTwitterVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    deployVerification(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'deployVerification()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    failed(overrides?: CallOverrides): Promise<[boolean]>;

    'failed()'(overrides?: CallOverrides): Promise<[boolean]>;

    mint(
      token: string,
      account: string,
      amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'mint(address,address,uint256)'(
      token: string,
      account: string,
      amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'restrictToRange(uint256,uint256,uint256)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    'restrictToRange(uint256,uint256,uint256,bool)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      nonZero: boolean,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setUp(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'setUp()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    setUpLenderPools(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'setUpLenderPools()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    testFail_invalidBorrower_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'testFail_invalidBorrower_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    testFail_invalidBorrower_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'testFail_invalidBorrower_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    testFail_invalidCollateralRatio(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'testFail_invalidCollateralRatio()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    testFail_invalidLender_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'testFail_invalidLender_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    testFail_invalidLender_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'testFail_invalidLender_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    test_mint(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'test_mint()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    test_validRequest_asBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'test_validRequest_asBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    test_validRequest_asLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'test_validRequest_asLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;
  };

  IS_TEST(overrides?: CallOverrides): Promise<boolean>;

  'IS_TEST()'(overrides?: CallOverrides): Promise<boolean>;

  SetUpAllContracts(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'SetUpAllContracts()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  SetUpCreditLineActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'SetUpCreditLineActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  SetUpCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'SetUpCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  SetUpGlobalActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'SetUpGlobalActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  SetUpPoolActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'SetUpPoolActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  SetUpPooledCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'SetUpPooledCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createBob(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createBob()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createCreditLineBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createCreditLineBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createCreditLineLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createCreditLineLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createCreditLineLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createCreditLineLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createFakeAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createFakeAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createFakeVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createFakeVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createPoolBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createPoolBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createPoolLenders(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createPoolLenders()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createPoolLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createPoolLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  createVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'createVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  create_creditLineReqeuest(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'create_creditLineReqeuest()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployCompoundYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployCompoundYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployNoYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployNoYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployPriceOracle(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployPriceOracle()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployProtocolFeeCollector(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployProtocolFeeCollector()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployRepayments(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployRepayments()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deploySavingsAccount(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deploySavingsAccount()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployStrategyRegistry(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployStrategyRegistry()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployTwitterVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployTwitterVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  deployVerification(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'deployVerification()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  failed(overrides?: CallOverrides): Promise<boolean>;

  'failed()'(overrides?: CallOverrides): Promise<boolean>;

  mint(
    token: string,
    account: string,
    amt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'mint(address,address,uint256)'(
    token: string,
    account: string,
    amt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'restrictToRange(uint256,uint256,uint256)'(
    val: BigNumberish,
    min: BigNumberish,
    max: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  'restrictToRange(uint256,uint256,uint256,bool)'(
    val: BigNumberish,
    min: BigNumberish,
    max: BigNumberish,
    nonZero: boolean,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setUp(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'setUp()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  setUpLenderPools(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'setUpLenderPools()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  testFail_invalidBorrower_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'testFail_invalidBorrower_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  testFail_invalidBorrower_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'testFail_invalidBorrower_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  testFail_invalidCollateralRatio(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'testFail_invalidCollateralRatio()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  testFail_invalidLender_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'testFail_invalidLender_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  testFail_invalidLender_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'testFail_invalidLender_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  test_mint(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'test_mint()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  test_validRequest_asBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'test_validRequest_asBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  test_validRequest_asLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'test_validRequest_asLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  callStatic: {
    IS_TEST(overrides?: CallOverrides): Promise<boolean>;

    'IS_TEST()'(overrides?: CallOverrides): Promise<boolean>;

    SetUpAllContracts(overrides?: CallOverrides): Promise<void>;

    'SetUpAllContracts()'(overrides?: CallOverrides): Promise<void>;

    SetUpCreditLineActors(overrides?: CallOverrides): Promise<void>;

    'SetUpCreditLineActors()'(overrides?: CallOverrides): Promise<void>;

    SetUpCreditLines(overrides?: CallOverrides): Promise<void>;

    'SetUpCreditLines()'(overrides?: CallOverrides): Promise<void>;

    SetUpGlobalActors(overrides?: CallOverrides): Promise<void>;

    'SetUpGlobalActors()'(overrides?: CallOverrides): Promise<void>;

    SetUpPoolActors(overrides?: CallOverrides): Promise<void>;

    'SetUpPoolActors()'(overrides?: CallOverrides): Promise<void>;

    SetUpPooledCreditLines(overrides?: CallOverrides): Promise<void>;

    'SetUpPooledCreditLines()'(overrides?: CallOverrides): Promise<void>;

    createAdmin(overrides?: CallOverrides): Promise<void>;

    'createAdmin()'(overrides?: CallOverrides): Promise<void>;

    createBob(overrides?: CallOverrides): Promise<void>;

    'createBob()'(overrides?: CallOverrides): Promise<void>;

    createCreditLineBorrower(overrides?: CallOverrides): Promise<void>;

    'createCreditLineBorrower()'(overrides?: CallOverrides): Promise<void>;

    createCreditLineLender(overrides?: CallOverrides): Promise<void>;

    'createCreditLineLender()'(overrides?: CallOverrides): Promise<void>;

    createCreditLineLiquidator(overrides?: CallOverrides): Promise<void>;

    'createCreditLineLiquidator()'(overrides?: CallOverrides): Promise<void>;

    createFakeAdmin(overrides?: CallOverrides): Promise<void>;

    'createFakeAdmin()'(overrides?: CallOverrides): Promise<void>;

    createFakeVerifier(overrides?: CallOverrides): Promise<void>;

    'createFakeVerifier()'(overrides?: CallOverrides): Promise<void>;

    createPoolBorrower(overrides?: CallOverrides): Promise<void>;

    'createPoolBorrower()'(overrides?: CallOverrides): Promise<void>;

    createPoolLenders(overrides?: CallOverrides): Promise<void>;

    'createPoolLenders()'(overrides?: CallOverrides): Promise<void>;

    createPoolLiquidator(overrides?: CallOverrides): Promise<void>;

    'createPoolLiquidator()'(overrides?: CallOverrides): Promise<void>;

    createVerifier(overrides?: CallOverrides): Promise<void>;

    'createVerifier()'(overrides?: CallOverrides): Promise<void>;

    create_creditLineReqeuest(overrides?: CallOverrides): Promise<void>;

    'create_creditLineReqeuest()'(overrides?: CallOverrides): Promise<void>;

    deployCompoundYield(overrides?: CallOverrides): Promise<void>;

    'deployCompoundYield()'(overrides?: CallOverrides): Promise<void>;

    deployCreditLines(overrides?: CallOverrides): Promise<void>;

    'deployCreditLines()'(overrides?: CallOverrides): Promise<void>;

    deployNoYield(overrides?: CallOverrides): Promise<void>;

    'deployNoYield()'(overrides?: CallOverrides): Promise<void>;

    deployPriceOracle(overrides?: CallOverrides): Promise<void>;

    'deployPriceOracle()'(overrides?: CallOverrides): Promise<void>;

    deployProtocolFeeCollector(overrides?: CallOverrides): Promise<void>;

    'deployProtocolFeeCollector()'(overrides?: CallOverrides): Promise<void>;

    deployRepayments(overrides?: CallOverrides): Promise<void>;

    'deployRepayments()'(overrides?: CallOverrides): Promise<void>;

    deploySavingsAccount(overrides?: CallOverrides): Promise<void>;

    'deploySavingsAccount()'(overrides?: CallOverrides): Promise<void>;

    deployStrategyRegistry(overrides?: CallOverrides): Promise<void>;

    'deployStrategyRegistry()'(overrides?: CallOverrides): Promise<void>;

    deployTwitterVerifier(overrides?: CallOverrides): Promise<void>;

    'deployTwitterVerifier()'(overrides?: CallOverrides): Promise<void>;

    deployVerification(overrides?: CallOverrides): Promise<void>;

    'deployVerification()'(overrides?: CallOverrides): Promise<void>;

    failed(overrides?: CallOverrides): Promise<boolean>;

    'failed()'(overrides?: CallOverrides): Promise<boolean>;

    mint(token: string, account: string, amt: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'mint(address,address,uint256)'(token: string, account: string, amt: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'restrictToRange(uint256,uint256,uint256)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'restrictToRange(uint256,uint256,uint256,bool)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      nonZero: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setUp(overrides?: CallOverrides): Promise<void>;

    'setUp()'(overrides?: CallOverrides): Promise<void>;

    setUpLenderPools(overrides?: CallOverrides): Promise<void>;

    'setUpLenderPools()'(overrides?: CallOverrides): Promise<void>;

    testFail_invalidBorrower_1(overrides?: CallOverrides): Promise<void>;

    'testFail_invalidBorrower_1()'(overrides?: CallOverrides): Promise<void>;

    testFail_invalidBorrower_2(overrides?: CallOverrides): Promise<void>;

    'testFail_invalidBorrower_2()'(overrides?: CallOverrides): Promise<void>;

    testFail_invalidCollateralRatio(overrides?: CallOverrides): Promise<void>;

    'testFail_invalidCollateralRatio()'(overrides?: CallOverrides): Promise<void>;

    testFail_invalidLender_1(overrides?: CallOverrides): Promise<void>;

    'testFail_invalidLender_1()'(overrides?: CallOverrides): Promise<void>;

    testFail_invalidLender_2(overrides?: CallOverrides): Promise<void>;

    'testFail_invalidLender_2()'(overrides?: CallOverrides): Promise<void>;

    test_mint(overrides?: CallOverrides): Promise<void>;

    'test_mint()'(overrides?: CallOverrides): Promise<void>;

    test_validRequest_asBorrower(overrides?: CallOverrides): Promise<void>;

    'test_validRequest_asBorrower()'(overrides?: CallOverrides): Promise<void>;

    test_validRequest_asLender(overrides?: CallOverrides): Promise<void>;

    'test_validRequest_asLender()'(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    log(undefined: null): TypedEventFilter<[string], { arg0: string }>;

    log_address(undefined: null): TypedEventFilter<[string], { arg0: string }>;

    log_bytes(undefined: null): TypedEventFilter<[string], { arg0: string }>;

    log_bytes32(undefined: null): TypedEventFilter<[string], { arg0: string }>;

    log_int(undefined: null): TypedEventFilter<[BigNumber], { arg0: BigNumber }>;

    log_named_address(key: null, val: null): TypedEventFilter<[string, string], { key: string; val: string }>;

    log_named_bytes(key: null, val: null): TypedEventFilter<[string, string], { key: string; val: string }>;

    log_named_bytes32(key: null, val: null): TypedEventFilter<[string, string], { key: string; val: string }>;

    log_named_decimal_int(
      key: null,
      val: null,
      decimals: null
    ): TypedEventFilter<[string, BigNumber, BigNumber], { key: string; val: BigNumber; decimals: BigNumber }>;

    log_named_decimal_uint(
      key: null,
      val: null,
      decimals: null
    ): TypedEventFilter<[string, BigNumber, BigNumber], { key: string; val: BigNumber; decimals: BigNumber }>;

    log_named_int(key: null, val: null): TypedEventFilter<[string, BigNumber], { key: string; val: BigNumber }>;

    log_named_string(key: null, val: null): TypedEventFilter<[string, string], { key: string; val: string }>;

    log_named_uint(key: null, val: null): TypedEventFilter<[string, BigNumber], { key: string; val: BigNumber }>;

    log_string(undefined: null): TypedEventFilter<[string], { arg0: string }>;

    log_uint(undefined: null): TypedEventFilter<[BigNumber], { arg0: BigNumber }>;

    logs(undefined: null): TypedEventFilter<[string], { arg0: string }>;
  };

  estimateGas: {
    IS_TEST(overrides?: CallOverrides): Promise<BigNumber>;

    'IS_TEST()'(overrides?: CallOverrides): Promise<BigNumber>;

    SetUpAllContracts(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'SetUpAllContracts()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    SetUpCreditLineActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'SetUpCreditLineActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    SetUpCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'SetUpCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    SetUpGlobalActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'SetUpGlobalActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    SetUpPoolActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'SetUpPoolActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    SetUpPooledCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'SetUpPooledCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createBob(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createBob()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createCreditLineBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createCreditLineBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createCreditLineLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createCreditLineLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createCreditLineLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createCreditLineLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createFakeAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createFakeAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createFakeVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createFakeVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createPoolBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createPoolBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createPoolLenders(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createPoolLenders()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createPoolLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createPoolLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    createVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'createVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    create_creditLineReqeuest(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'create_creditLineReqeuest()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployCompoundYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployCompoundYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployNoYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployNoYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployPriceOracle(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployPriceOracle()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployProtocolFeeCollector(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployProtocolFeeCollector()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployRepayments(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployRepayments()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deploySavingsAccount(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deploySavingsAccount()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployStrategyRegistry(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployStrategyRegistry()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployTwitterVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployTwitterVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    deployVerification(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'deployVerification()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    failed(overrides?: CallOverrides): Promise<BigNumber>;

    'failed()'(overrides?: CallOverrides): Promise<BigNumber>;

    mint(
      token: string,
      account: string,
      amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'mint(address,address,uint256)'(
      token: string,
      account: string,
      amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'restrictToRange(uint256,uint256,uint256)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'restrictToRange(uint256,uint256,uint256,bool)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      nonZero: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setUp(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'setUp()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    setUpLenderPools(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'setUpLenderPools()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    testFail_invalidBorrower_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'testFail_invalidBorrower_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    testFail_invalidBorrower_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'testFail_invalidBorrower_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    testFail_invalidCollateralRatio(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'testFail_invalidCollateralRatio()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    testFail_invalidLender_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'testFail_invalidLender_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    testFail_invalidLender_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'testFail_invalidLender_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    test_mint(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'test_mint()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    test_validRequest_asBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'test_validRequest_asBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    test_validRequest_asLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'test_validRequest_asLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;
  };

  populateTransaction: {
    IS_TEST(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'IS_TEST()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SetUpAllContracts(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'SetUpAllContracts()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    SetUpCreditLineActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'SetUpCreditLineActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    SetUpCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'SetUpCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    SetUpGlobalActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'SetUpGlobalActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    SetUpPoolActors(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'SetUpPoolActors()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    SetUpPooledCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'SetUpPooledCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createBob(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createBob()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createCreditLineBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createCreditLineBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createCreditLineLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createCreditLineLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createCreditLineLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createCreditLineLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createFakeAdmin(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createFakeAdmin()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createFakeVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createFakeVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createPoolBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createPoolBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createPoolLenders(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createPoolLenders()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createPoolLiquidator(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createPoolLiquidator()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    createVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'createVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    create_creditLineReqeuest(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'create_creditLineReqeuest()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployCompoundYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployCompoundYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployCreditLines(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployCreditLines()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployNoYield(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployNoYield()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployPriceOracle(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployPriceOracle()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployProtocolFeeCollector(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployProtocolFeeCollector()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployRepayments(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployRepayments()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deploySavingsAccount(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deploySavingsAccount()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployStrategyRegistry(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployStrategyRegistry()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployTwitterVerifier(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployTwitterVerifier()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    deployVerification(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'deployVerification()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    failed(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'failed()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mint(
      token: string,
      account: string,
      amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'mint(address,address,uint256)'(
      token: string,
      account: string,
      amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'restrictToRange(uint256,uint256,uint256)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'restrictToRange(uint256,uint256,uint256,bool)'(
      val: BigNumberish,
      min: BigNumberish,
      max: BigNumberish,
      nonZero: boolean,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setUp(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'setUp()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    setUpLenderPools(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'setUpLenderPools()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    testFail_invalidBorrower_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'testFail_invalidBorrower_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    testFail_invalidBorrower_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'testFail_invalidBorrower_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    testFail_invalidCollateralRatio(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'testFail_invalidCollateralRatio()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    testFail_invalidLender_1(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'testFail_invalidLender_1()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    testFail_invalidLender_2(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'testFail_invalidLender_2()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    test_mint(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'test_mint()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    test_validRequest_asBorrower(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'test_validRequest_asBorrower()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    test_validRequest_asLender(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'test_validRequest_asLender()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;
  };
}
