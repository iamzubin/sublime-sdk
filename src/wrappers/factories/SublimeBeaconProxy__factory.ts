/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { SublimeBeaconProxy } from '../SublimeBeaconProxy';

export class SublimeBeaconProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(beacon: string, data: BytesLike, overrides?: Overrides & { from?: string | Promise<string> }): Promise<SublimeBeaconProxy> {
    return super.deploy(beacon, data, overrides || {}) as Promise<SublimeBeaconProxy>;
  }
  getDeployTransaction(beacon: string, data: BytesLike, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(beacon, data, overrides || {});
  }
  attach(address: string): SublimeBeaconProxy {
    return super.attach(address) as SublimeBeaconProxy;
  }
  connect(signer: Signer): SublimeBeaconProxy__factory {
    return super.connect(signer) as SublimeBeaconProxy__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SublimeBeaconProxy {
    return new Contract(address, _abi, signerOrProvider) as SublimeBeaconProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516108513803806108518339818101604052604081101561003357600080fd5b81516020830180516040519294929383019291908464010000000082111561005a57600080fd5b90830190602082018581111561006f57600080fd5b825164010000000081118282018810171561008957600080fd5b82525081516020918201929091019080838360005b838110156100b657818101518382015260200161009e565b50505050905090810190601f1680156100e35780820380516001836020036101000a031916815260200191505b50604052508391508290506100f88282610101565b5050505061048b565b6101148261025660201b6100311760201c565b61014f5760405162461bcd60e51b81526004018080602001828103825260258152602001806107d26025913960400191505060405180910390fd5b6101c7826001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018b57600080fd5b505afa15801561019f573d6000803e3d6000fd5b505050506040513d60208110156101b557600080fd5b5051610256602090811b61003117901c565b6102025760405162461bcd60e51b815260040180806020018281038252603481526020018061081d6034913960400191505060405180910390fd5b6000805160206107918339815191528281558151156102515761024f61022661025c565b836040518060600160405280602181526020016107b1602191396102cf60201b6100371760201c565b505b505050565b3b151590565b60006102666103d4565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561029e57600080fd5b505afa1580156102b2573d6000803e3d6000fd5b505050506040513d60208110156102c857600080fd5b5051905090565b60606102da84610256565b6103155760405162461bcd60e51b81526004018080602001828103825260268152602001806107f76026913960400191505060405180910390fd5b600080856001600160a01b0316856040518082805190602001908083835b602083106103525780518252601f199092019160209182019101610333565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146103b2576040519150601f19603f3d011682016040523d82523d6000602084013e6103b7565b606091505b5090925090506103c88282866103e7565b925050505b9392505050565b6000805160206107918339815191525490565b606083156103f65750816103cd565b8251156104065782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610450578181015183820152602001610438565b50505050905090810190601f16801561047d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6102f78061049a6000396000f3fe60806040523661001357610011610017565b005b6100115b61001f61002f565b61002f61002a61013b565b6101ae565b565b3b151590565b606061004284610031565b61007d5760405162461bcd60e51b815260040180806020018281038252602681526020018061029c6026913960400191505060405180910390fd5b600080856001600160a01b0316856040518082805190602001908083835b602083106100ba5780518252601f19909201916020918201910161009b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461011a576040519150601f19603f3d011682016040523d82523d6000602084013e61011f565b606091505b509150915061012f8282866101d2565b925050505b9392505050565b6000610145610276565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d60208110156101a757600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101cd573d6000f35b3d6000fd5b606083156101e1575081610134565b8251156101f15782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561023b578181015183820152602001610223565b50505050905090810190601f1680156102685780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50549056fe416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a2646970667358221220deb4e1a1fd329d75995074b68a2efffb09edc0d3a6cb094c7d420101b4cdcdcb64736f6c63430007060033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374426561636f6e50726f78793a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374';
