/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { CreditLineActor } from '../CreditLineActor';

export class CreditLineActor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<CreditLineActor> {
    return super.deploy(overrides || {}) as Promise<CreditLineActor>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CreditLineActor {
    return super.attach(address) as CreditLineActor;
  }
  connect(signer: Signer): CreditLineActor__factory {
    return super.connect(signer) as CreditLineActor__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CreditLineActor {
    return new Contract(address, _abi, signerOrProvider) as CreditLineActor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'acceptRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'fromSavingsAccount',
        type: 'bool',
      },
    ],
    name: 'addCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'borrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'close',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'borrowLimit',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'borrowRate',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'autoLiquidation',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'collateralRatio',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'borrowAsset',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'collateralAsset',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'collateralStrategy',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'requestAsLender',
        type: 'bool',
      },
    ],
    name: 'createRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'toSavingsAccount',
        type: 'bool',
      },
    ],
    name: 'liquidate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'repay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'creditLineAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'toSavingsAccount',
        type: 'bool',
      },
    ],
    name: 'withdrawCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610659806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063acd703f21161005b578063acd703f2146100db578063c1bce0b7146100ee578063e49280cb14610101578063fd705cca1461011457610088565b80633ecdb8281461008d5780638616abd8146100a257806386e439e9146100b55780638cd2e0c7146100c8575b600080fd5b6100a061009b3660046104b6565b610127565b005b6100a06100b036600461048d565b61018f565b6100a06100c3366004610523565b6101f4565b6100a06100d63660046104f1565b61025f565b6100a06100e93660046103e9565b61028f565b6100a06100fc3660046104f1565b61032d565b6100a061010f36600461048d565b61035d565b6100a0610122366004610523565b61038b565b6040516309d636c360e21b815283906001600160a01b03821690632758db0c9061015790869086906004016105ed565b600060405180830381600087803b15801561017157600080fd5b505af1158015610185573d6000803e3d6000fd5b5050505050505050565b6040516319b05f4960e01b815282906001600160a01b038216906319b05f49906101bd9085906004016105e4565b600060405180830381600087803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b50505050505050565b604051631156d69f60e11b815284906001600160a01b038216906322adad3e906102269087908790879060040161060b565b600060405180830381600087803b15801561024057600080fd5b505af1158015610254573d6000803e3d6000fd5b505050505050505050565b60405163d8aed14560e01b815283906001600160a01b0382169063d8aed1459061015790869086906004016105fd565b60405163277c338360e11b81528a906001600160a01b03821690634ef86706906102cd908d908d908d908d908d908d908d908d908d90600401610580565b602060405180830381600087803b1580156102e757600080fd5b505af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190610568565b505050505050505050505050565b604051630ecbcdab60e01b815283906001600160a01b03821690630ecbcdab9061015790869086906004016105fd565b604051630575f5a760e11b815282906001600160a01b03821690630aebeb4e906101bd9085906004016105e4565b60405163451226d160e01b815284906001600160a01b0382169063451226d1906102269087908790879060040161060b565b80356001600160a01b03811681146103d457600080fd5b919050565b803580151581146103d457600080fd5b6000806000806000806000806000806101408b8d031215610408578586fd5b6104118b6103bd565b995061041f60208c016103bd565b985060408b0135975060608b0135965061043b60808c016103d9565b955060a08b0135945061045060c08c016103bd565b935061045e60e08c016103bd565b925061046d6101008c016103bd565b915061047c6101208c016103d9565b90509295989b9194979a5092959850565b6000806040838503121561049f578182fd5b6104a8836103bd565b946020939093013593505050565b6000806000606084860312156104ca578283fd5b6104d3846103bd565b9250602084013591506104e8604085016103d9565b90509250925092565b600080600060608486031215610505578283fd5b61050e846103bd565b95602085013595506040909401359392505050565b60008060008060808587031215610538578384fd5b610541856103bd565b9350602085013592506040850135915061055d606086016103d9565b905092959194509250565b600060208284031215610579578081fd5b5051919050565b6001600160a01b03998a1681526fffffffffffffffffffffffffffffffff988916602082015296909716604087015293151560608601526080850192909252851660a0840152841660c083015290921660e083015215156101008201526101200190565b90815260200190565b9182521515602082015260400190565b918252602082015260400190565b9283526020830191909152151560408201526060019056fea26469706673582212209e61324659250871a8fc5a98ec6df0c2e1cbf4c61ba4429d7b8efa6e6fa1e56a64736f6c63430007060033';
