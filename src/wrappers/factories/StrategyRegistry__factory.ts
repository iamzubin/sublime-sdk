/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { StrategyRegistry } from '../StrategyRegistry';

export class StrategyRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<StrategyRegistry> {
    return super.deploy(overrides || {}) as Promise<StrategyRegistry>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StrategyRegistry {
    return super.attach(address) as StrategyRegistry;
  }
  connect(signer: Signer): StrategyRegistry__factory {
    return super.connect(signer) as StrategyRegistry__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StrategyRegistry {
    return new Contract(address, _abi, signerOrProvider) as StrategyRegistry;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxStrategies',
        type: 'uint256',
      },
    ],
    name: 'MaxStrategiesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
    ],
    name: 'StrategyAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
    ],
    name: 'StrategyRemoved',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'addStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_maxStrategies',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'isValidStrategy',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxStrategies',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'registry',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_strategyIndex',
        type: 'uint256',
      },
    ],
    name: 'removeStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'retiredRegistry',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'strategies',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxStrategies',
        type: 'uint256',
      },
    ],
    name: 'updateMaxStrategies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_strategyIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_oldStrategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newStrategy',
        type: 'address',
      },
    ],
    name: 'updateStrategy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061127e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c02d17271161008c578063cd6dc68711610066578063cd6dc6871461028c578063d574ea3d146102b8578063f2fde38b146102d5578063f50d4984146102fb576100ea565b8063c02d17271461022d578063c0cbbca614610267578063c79c21b714610284576100ea565b8063715018a6116100c8578063715018a61461017557806376ba717b1461017d5780638da5cb5b146101b1578063b49a60bb146101d5576100ea565b8063038defd7146100ef578063223e54791461012757806369a8405b1461014f575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b0316610318565b60408051918252519081900360200190f35b61014d6004803603602081101561013d57600080fd5b50356001600160a01b031661032a565b005b6101156004803603602081101561016557600080fd5b50356001600160a01b03166104f0565b61014d610502565b61014d6004803603606081101561019357600080fd5b508035906001600160a01b03602082013581169160400135166105ae565b6101b9610813565b604080516001600160a01b039092168252519081900360200190f35b6101dd610822565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610219578181015183820152602001610201565b505050509050019250505060405180910390f35b6102536004803603602081101561024357600080fd5b50356001600160a01b0316610884565b604080519115158252519081900360200190f35b61014d6004803603602081101561027d57600080fd5b50356108c7565b610115610a95565b61014d600480360360408110156102a257600080fd5b506001600160a01b038135169060200135610a9b565b6101b9600480360360208110156102ce57600080fd5b5035610b59565b61014d600480360360208110156102eb57600080fd5b50356001600160a01b0316610b83565b61014d6004803603602081101561031157600080fd5b5035610c86565b60676020526000908152604090205481565b610332610cf4565b6001600160a01b0316610343610813565b6001600160a01b03161461038c576040805162461bcd60e51b8152602060048201819052602482015260008051602061116f833981519152604482015290519081900360640190fd5b60655460665460010111156103d25760405162461bcd60e51b815260040180806020018281038252603981526020018061118f6039913960400191505060405180910390fd5b6001600160a01b038116600090815260676020526040902054156104275760405162461bcd60e51b81526004018080602001828103825260378152602001806110796037913960400191505060405180910390fd5b6001600160a01b03811661046c5760405162461bcd60e51b815260040180806020018281038252603e81526020018061103b603e913960400191505060405180910390fd5b6001600160a01b03811660008181526067602052604080822060019081905560668054918201815583527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b03191684179055517f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19190a250565b60686020526000908152604090205481565b61050a610cf4565b6001600160a01b031661051b610813565b6001600160a01b031614610564576040805162461bcd60e51b8152602060048201819052602482015260008051602061116f833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6105b6610cf4565b6001600160a01b03166105c7610813565b6001600160a01b031614610610576040805162461bcd60e51b8152602060048201819052602482015260008051602061116f833981519152604482015290519081900360640190fd5b60665483106106505760405162461bcd60e51b81526004018080602001828103825260438152602001806111c86043913960600191505060405180910390fd5b816001600160a01b03166066848154811061066757fe5b6000918252602090912001546001600160a01b0316146106b85760405162461bcd60e51b81526004018080602001828103825260538152602001806110b06053913960600191505060405180910390fd5b6001600160a01b0381166106fd5760405162461bcd60e51b8152600401808060200182810382526044815260200180610fd16044913960600191505060405180910390fd5b6001600160a01b038116600090815260676020526040902054156107525760405162461bcd60e51b815260040180806020018281038252603e81526020018061120b603e913960400191505060405180910390fd5b806066848154811061076057fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905591841680825260678352604080832083905560689093528282206001905591517f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea49190a26001600160a01b03811660008181526067602052604080822060019055517f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19190a2505050565b6033546001600160a01b031690565b6060606680548060200260200160405190810160405280929190818152602001828054801561087a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161085c575b5050505050905090565b6001600160a01b0381166000908152606760205260408120541515806108c157506001600160a01b03821660009081526068602052604090205415155b92915050565b6108cf610cf4565b6001600160a01b03166108e0610813565b6001600160a01b031614610929576040805162461bcd60e51b8152602060048201819052602482015260008051602061116f833981519152604482015290519081900360640190fd5b60006066828154811061093857fe5b60009182526020808320909101546066805460408051828602810186019091528181526001600160a01b03909316955091929091908301828280156109a657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610988575b509394508693505050505b6001825103811015610a12578181600101815181106109cc57fe5b6020026020010151606682815481106109e157fe5b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790556001016109b1565b506066805480610a1e57fe5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038416808352606782526040808420849055606890925281832060019055905190917f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea491a2505050565b60655481565b600054610100900460ff1680610ab45750610ab4610cf8565b80610ac2575060005460ff16155b610afd5760405162461bcd60e51b815260040180806020018281038252602e815260200180611103602e913960400191505060405180910390fd5b600054610100900460ff16158015610b28576000805460ff1961ff0019909116610100171660011790555b610b30610d09565b610b3983610b83565b610b4282610dba565b8015610b54576000805461ff00191690555b505050565b60668181548110610b6957600080fd5b6000918252602090912001546001600160a01b0316905081565b610b8b610cf4565b6001600160a01b0316610b9c610813565b6001600160a01b031614610be5576040805162461bcd60e51b8152602060048201819052602482015260008051602061116f833981519152604482015290519081900360640190fd5b6001600160a01b038116610c2a5760405162461bcd60e51b81526004018080602001828103825260268152602001806110156026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b610c8e610cf4565b6001600160a01b0316610c9f610813565b6001600160a01b031614610ce8576040805162461bcd60e51b8152602060048201819052602482015260008051602061116f833981519152604482015290519081900360640190fd5b610cf181610dba565b50565b3390565b6000610d0330610e31565b15905090565b600054610100900460ff1680610d225750610d22610cf8565b80610d30575060005460ff16155b610d6b5760405162461bcd60e51b815260040180806020018281038252602e815260200180611103602e913960400191505060405180910390fd5b600054610100900460ff16158015610d96576000805460ff1961ff0019909116610100171660011790555b610d9e610e37565b610da6610ed7565b8015610cf1576000805461ff001916905550565b80610df65760405162461bcd60e51b815260040180806020018281038252603e815260200180611131603e913960400191505060405180910390fd5b60658190556040805182815290517fd59e44bf8aa1c1d7491eb52429bbdce9f1fe3bbb314b1786e509c58bf76365b79181900360200190a150565b3b151590565b600054610100900460ff1680610e505750610e50610cf8565b80610e5e575060005460ff16155b610e995760405162461bcd60e51b815260040180806020018281038252602e815260200180611103602e913960400191505060405180910390fd5b600054610100900460ff16158015610da6576000805460ff1961ff0019909116610100171660011790558015610cf1576000805461ff001916905550565b600054610100900460ff1680610ef05750610ef0610cf8565b80610efe575060005460ff16155b610f395760405162461bcd60e51b815260040180806020018281038252602e815260200180611103602e913960400191505060405180910390fd5b600054610100900460ff16158015610f64576000805460ff1961ff0019909116610100171660011790555b6000610f6e610cf4565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610cf1576000805461ff00191690555056fe537472617465677952656769737472793a3a7570646174655374726174656779202d204e65772073747261746567792063616e6e6f7420626520616464726573732830294f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373537472617465677952656769737472793a3a6164645374726174656779202d205f73747261746567792063616e6e6f742062652061646472657373283029537472617465677952656769737472793a3a6164645374726174656779202d20537472617465677920616c726561647920657869737473537472617465677952656769737472793a3a7570646174655374726174656779202d20696e64657820746f2075706461746520616e64207374726174656779206164647265737320646f6e2774206d61746368496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564537472617465677952656769737472793a3a7570646174654d6178537472617465676965732073686f756c64206265206d6f7265207468616e207a65726f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572537472617465677952656769737472793a3a6164645374726174656779202d2043616e277420616464206d6f72652073747261746567696573537472617465677952656769737472793a3a205f737472617465677920696e6465782063616e6e6f74206265206d6f7265207468616e206172726179206c656e677468537472617465677952656769737472793a3a7570646174655374726174656779202d204e657720737472617465677920616c726561647920657869737473a2646970667358221220ab57cd3d1ff2413f3ae004a0f39ac1a81685475276779bcdb172ca7051e970e064736f6c63430007060033';
