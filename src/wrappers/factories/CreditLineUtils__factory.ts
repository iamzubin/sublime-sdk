/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { CreditLineUtils } from '../CreditLineUtils';

export class CreditLineUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_weth: string, _creditLines: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<CreditLineUtils> {
    return super.deploy(_weth, _creditLines, overrides || {}) as Promise<CreditLineUtils>;
  }
  getDeployTransaction(
    _weth: string,
    _creditLines: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, _creditLines, overrides || {});
  }
  attach(address: string): CreditLineUtils {
    return super.attach(address) as CreditLineUtils;
  }
  connect(signer: Signer): CreditLineUtils__factory {
    return super.connect(signer) as CreditLineUtils__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CreditLineUtils {
    return new Contract(address, _abi, signerOrProvider) as CreditLineUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_weth',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_creditLines',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'creditlines',
    outputs: [
      {
        internalType: 'contract ICreditline',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'depositEthAsCollateralToCreditLine',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_id',
        type: 'uint256',
      },
    ],
    name: 'repayEthToCreditLines',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'weth',
    outputs: [
      {
        internalType: 'contract IWETH9',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60c060405234801561001057600080fd5b506040516106363803806106368339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c6105926100a46000398060fb528061021752806102e1528061043c52806104fe52508060d7528061017452806101e85280610399528061040d52506105926000f3fe60806040526004361061003f5760003560e01c80633fc8cef314610044578063748e98961461007557806393064c6c1461008a578063fd0f0e7a146100b8575b600080fd5b34801561005057600080fd5b506100596100d5565b604080516001600160a01b039092168252519081900360200190f35b34801561008157600080fd5b506100596100f9565b6100b6600480360360408110156100a057600080fd5b50803590602001356001600160a01b031661011d565b005b6100b6600480360360208110156100ce57600080fd5b5035610342565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60003411610172576040805162461bcd60e51b815260206004820152601d60248201527f53686f756c64206465706f736974206e6f6e2d7a65726f2076616c7565000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000346040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561027d57600080fd5b505af1158015610291573d6000803e3d6000fd5b505050506040513d60208110156102a757600080fd5b50506040805163fb6412a360e01b8152600481018490523460248201526001600160a01b03838116604483015260006064830181905292517f00000000000000000000000000000000000000000000000000000000000000009091169263fb6412a3926084808201939182900301818387803b15801561032657600080fd5b505af115801561033a573d6000803e3d6000fd5b505050505050565b60003411610397576040805162461bcd60e51b815260206004820152601b60248201527f53686f756c64207265706179206e6f6e2d7a65726f2076616c75650000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103f257600080fd5b505af1158015610406573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000346040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b505050506040513d60208110156104cc57600080fd5b505060408051630dfaa45360e31b81526004810183905234602482015260006044820181905291516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692636fd52298926064808201939182900301818387803b15801561054157600080fd5b505af1158015610555573d6000803e3d6000fd5b505050505056fea26469706673582212203e4b5440c1f2e5b4e88ac1b9c30137655cb9348dffb5531a6373149061087d6164736f6c63430007060033';
