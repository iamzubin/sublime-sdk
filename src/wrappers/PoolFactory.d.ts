/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from 'ethers';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';
import { TypedEventFilter, TypedEvent, TypedListener } from './commons';

interface PoolFactoryInterface extends ethers.utils.Interface {
  functions: {
    'MINTER_ROLE()': FunctionFragment;
    'PAUSER_ROLE()': FunctionFragment;
    'collectionPeriod()': FunctionFragment;
    'createPool(uint256,uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,bool,bytes32,address,address)': FunctionFragment;
    'extension()': FunctionFragment;
    'getProtocolFeeData()': FunctionFragment;
    'gracePeriodPenaltyFraction()': FunctionFragment;
    'initialize(address,uint256,uint256,uint256,uint256,bytes4,bytes4,uint256,uint256,uint256,uint256,address)': FunctionFragment;
    'liquidatorRewardFraction()': FunctionFragment;
    'marginCallDuration()': FunctionFragment;
    'matchCollateralRatioInterval()': FunctionFragment;
    'minBorrowFraction()': FunctionFragment;
    'owner()': FunctionFragment;
    'poolCancelPenaltyFraction()': FunctionFragment;
    'poolImpl()': FunctionFragment;
    'poolInitFuncSelector()': FunctionFragment;
    'poolRegistry(address)': FunctionFragment;
    'poolTokenImpl()': FunctionFragment;
    'poolTokenInitFuncSelector()': FunctionFragment;
    'priceOracle()': FunctionFragment;
    'renounceOwnership()': FunctionFragment;
    'repaymentImpl()': FunctionFragment;
    'savingsAccount()': FunctionFragment;
    'setImplementations(address,address,address,address,address,address,address,address)': FunctionFragment;
    'strategyRegistry()': FunctionFragment;
    'transferOwnership(address)': FunctionFragment;
    'updateBorrowRateLimit(uint256,uint256)': FunctionFragment;
    'updateCollateralRatioLimit(uint256,uint256)': FunctionFragment;
    'updateCollectionPeriod(uint256)': FunctionFragment;
    'updateGracePeriodPenaltyFraction(uint256)': FunctionFragment;
    'updateLiquidatorRewardFraction(uint256)': FunctionFragment;
    'updateMarginCallDuration(uint256)': FunctionFragment;
    'updateMatchCollateralRatioInterval(uint256)': FunctionFragment;
    'updateMinBorrowFraction(uint256)': FunctionFragment;
    'updateNoOfRepaymentIntervalsLimit(uint256,uint256)': FunctionFragment;
    'updatePoolCancelPenaltyFraction(uint256)': FunctionFragment;
    'updatePoolLogic(address)': FunctionFragment;
    'updatePoolSizeLimit(uint256,uint256)': FunctionFragment;
    'updatePoolTokenImpl(address)': FunctionFragment;
    'updatePoolTokenInitFuncSelector(bytes4)': FunctionFragment;
    'updatePriceoracle(address)': FunctionFragment;
    'updateProtocolFeeCollector(address)': FunctionFragment;
    'updateProtocolFeeFraction(uint256)': FunctionFragment;
    'updateRepaymentImpl(address)': FunctionFragment;
    'updateRepaymentIntervalLimit(uint256,uint256)': FunctionFragment;
    'updateSavingsAccount(address)': FunctionFragment;
    'updateStrategyRegistry(address)': FunctionFragment;
    'updateSupportedBorrowTokens(address,bool)': FunctionFragment;
    'updateSupportedCollateralTokens(address,bool)': FunctionFragment;
    'updateUserRegistry(address)': FunctionFragment;
    'updatedExtension(address)': FunctionFragment;
    'updatepoolInitFuncSelector(bytes4)': FunctionFragment;
    'userRegistry()': FunctionFragment;
    'votingPassRatio()': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'MINTER_ROLE', values?: undefined): string;
  encodeFunctionData(functionFragment: 'PAUSER_ROLE', values?: undefined): string;
  encodeFunctionData(functionFragment: 'collectionPeriod', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'createPool',
    values: [
      BigNumberish,
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string,
      BigNumberish,
      boolean,
      BytesLike,
      string,
      string
    ]
  ): string;
  encodeFunctionData(functionFragment: 'extension', values?: undefined): string;
  encodeFunctionData(functionFragment: 'getProtocolFeeData', values?: undefined): string;
  encodeFunctionData(functionFragment: 'gracePeriodPenaltyFraction', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'initialize',
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(functionFragment: 'liquidatorRewardFraction', values?: undefined): string;
  encodeFunctionData(functionFragment: 'marginCallDuration', values?: undefined): string;
  encodeFunctionData(functionFragment: 'matchCollateralRatioInterval', values?: undefined): string;
  encodeFunctionData(functionFragment: 'minBorrowFraction', values?: undefined): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolCancelPenaltyFraction', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolImpl', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolInitFuncSelector', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolRegistry', values: [string]): string;
  encodeFunctionData(functionFragment: 'poolTokenImpl', values?: undefined): string;
  encodeFunctionData(functionFragment: 'poolTokenInitFuncSelector', values?: undefined): string;
  encodeFunctionData(functionFragment: 'priceOracle', values?: undefined): string;
  encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string;
  encodeFunctionData(functionFragment: 'repaymentImpl', values?: undefined): string;
  encodeFunctionData(functionFragment: 'savingsAccount', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'setImplementations',
    values: [string, string, string, string, string, string, string, string]
  ): string;
  encodeFunctionData(functionFragment: 'strategyRegistry', values?: undefined): string;
  encodeFunctionData(functionFragment: 'transferOwnership', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateBorrowRateLimit', values: [BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateCollateralRatioLimit', values: [BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateCollectionPeriod', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateGracePeriodPenaltyFraction', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateLiquidatorRewardFraction', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateMarginCallDuration', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateMatchCollateralRatioInterval', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateMinBorrowFraction', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateNoOfRepaymentIntervalsLimit', values: [BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updatePoolCancelPenaltyFraction', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updatePoolLogic', values: [string]): string;
  encodeFunctionData(functionFragment: 'updatePoolSizeLimit', values: [BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updatePoolTokenImpl', values: [string]): string;
  encodeFunctionData(functionFragment: 'updatePoolTokenInitFuncSelector', values: [BytesLike]): string;
  encodeFunctionData(functionFragment: 'updatePriceoracle', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateProtocolFeeCollector', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateProtocolFeeFraction', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateRepaymentImpl', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateRepaymentIntervalLimit', values: [BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateSavingsAccount', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateStrategyRegistry', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateSupportedBorrowTokens', values: [string, boolean]): string;
  encodeFunctionData(functionFragment: 'updateSupportedCollateralTokens', values: [string, boolean]): string;
  encodeFunctionData(functionFragment: 'updateUserRegistry', values: [string]): string;
  encodeFunctionData(functionFragment: 'updatedExtension', values: [string]): string;
  encodeFunctionData(functionFragment: 'updatepoolInitFuncSelector', values: [BytesLike]): string;
  encodeFunctionData(functionFragment: 'userRegistry', values?: undefined): string;
  encodeFunctionData(functionFragment: 'votingPassRatio', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'MINTER_ROLE', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'PAUSER_ROLE', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'collectionPeriod', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'createPool', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'extension', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getProtocolFeeData', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'gracePeriodPenaltyFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'liquidatorRewardFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'marginCallDuration', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'matchCollateralRatioInterval', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'minBorrowFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolCancelPenaltyFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolImpl', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolInitFuncSelector', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolRegistry', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolTokenImpl', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'poolTokenInitFuncSelector', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'priceOracle', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'repaymentImpl', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'savingsAccount', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setImplementations', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'strategyRegistry', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateBorrowRateLimit', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateCollateralRatioLimit', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateCollectionPeriod', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateGracePeriodPenaltyFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateLiquidatorRewardFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateMarginCallDuration', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateMatchCollateralRatioInterval', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateMinBorrowFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateNoOfRepaymentIntervalsLimit', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatePoolCancelPenaltyFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatePoolLogic', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatePoolSizeLimit', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatePoolTokenImpl', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatePoolTokenInitFuncSelector', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatePriceoracle', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateProtocolFeeCollector', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateProtocolFeeFraction', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateRepaymentImpl', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateRepaymentIntervalLimit', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateSavingsAccount', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateStrategyRegistry', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateSupportedBorrowTokens', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateSupportedCollateralTokens', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateUserRegistry', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatedExtension', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updatepoolInitFuncSelector', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'userRegistry', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'votingPassRatio', data: BytesLike): Result;

  events: {
    'BorrowTokenUpdated(address,bool)': EventFragment;
    'CollateralTokenUpdated(address,bool)': EventFragment;
    'CollectionPeriodUpdated(uint256)': EventFragment;
    'ExtensionImplUpdated(address)': EventFragment;
    'GracePeriodPenaltyFractionUpdated(uint256)': EventFragment;
    'LimitsUpdated(string,uint256,uint256)': EventFragment;
    'LiquidatorRewardFractionUpdated(uint256)': EventFragment;
    'MarginCallDurationUpdated(uint256)': EventFragment;
    'MatchCollateralRatioIntervalUpdated(uint256)': EventFragment;
    'MinBorrowFractionUpdated(uint256)': EventFragment;
    'OwnershipTransferred(address,address)': EventFragment;
    'PoolCancelPenaltyFractionUpdated(uint256)': EventFragment;
    'PoolCreated(address,address,address)': EventFragment;
    'PoolInitSelectorUpdated(bytes4)': EventFragment;
    'PoolLogicUpdated(address)': EventFragment;
    'PoolTokenImplUpdated(address)': EventFragment;
    'PoolTokenInitFuncSelector(bytes4)': EventFragment;
    'PriceOracleUpdated(address)': EventFragment;
    'ProtocolFeeCollectorUpdated(address)': EventFragment;
    'ProtocolFeeFractionUpdated(uint256)': EventFragment;
    'RepaymentImplUpdated(address)': EventFragment;
    'SavingsAccountUpdated(address)': EventFragment;
    'StrategyRegistryUpdated(address)': EventFragment;
    'UserRegistryUpdated(address)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'BorrowTokenUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'CollateralTokenUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'CollectionPeriodUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ExtensionImplUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'GracePeriodPenaltyFractionUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'LimitsUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'LiquidatorRewardFractionUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'MarginCallDurationUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'MatchCollateralRatioIntervalUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'MinBorrowFractionUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PoolCancelPenaltyFractionUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PoolCreated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PoolInitSelectorUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PoolLogicUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PoolTokenImplUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PoolTokenInitFuncSelector'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PriceOracleUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ProtocolFeeCollectorUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'ProtocolFeeFractionUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'RepaymentImplUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'SavingsAccountUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'StrategyRegistryUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'UserRegistryUpdated'): EventFragment;
}

export class PoolFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PoolFactoryInterface;

  functions: {
    MINTER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    'MINTER_ROLE()'(overrides?: CallOverrides): Promise<[string]>;

    PAUSER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    'PAUSER_ROLE()'(overrides?: CallOverrides): Promise<[string]>;

    collectionPeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    'collectionPeriod()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    createPool(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'createPool(uint256,uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,bool,bytes32,address,address)'(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    extension(overrides?: CallOverrides): Promise<[string]>;

    'extension()'(overrides?: CallOverrides): Promise<[string]>;

    getProtocolFeeData(overrides?: CallOverrides): Promise<[BigNumber, string]>;

    'getProtocolFeeData()'(overrides?: CallOverrides): Promise<[BigNumber, string]>;

    gracePeriodPenaltyFraction(overrides?: CallOverrides): Promise<[BigNumber]>;

    'gracePeriodPenaltyFraction()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    initialize(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'initialize(address,uint256,uint256,uint256,uint256,bytes4,bytes4,uint256,uint256,uint256,uint256,address)'(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    liquidatorRewardFraction(overrides?: CallOverrides): Promise<[BigNumber]>;

    'liquidatorRewardFraction()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    marginCallDuration(overrides?: CallOverrides): Promise<[BigNumber]>;

    'marginCallDuration()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    matchCollateralRatioInterval(overrides?: CallOverrides): Promise<[BigNumber]>;

    'matchCollateralRatioInterval()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    minBorrowFraction(overrides?: CallOverrides): Promise<[BigNumber]>;

    'minBorrowFraction()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    'owner()'(overrides?: CallOverrides): Promise<[string]>;

    poolCancelPenaltyFraction(overrides?: CallOverrides): Promise<[BigNumber]>;

    'poolCancelPenaltyFraction()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    poolImpl(overrides?: CallOverrides): Promise<[string]>;

    'poolImpl()'(overrides?: CallOverrides): Promise<[string]>;

    poolInitFuncSelector(overrides?: CallOverrides): Promise<[string]>;

    'poolInitFuncSelector()'(overrides?: CallOverrides): Promise<[string]>;

    poolRegistry(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    'poolRegistry(address)'(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    poolTokenImpl(overrides?: CallOverrides): Promise<[string]>;

    'poolTokenImpl()'(overrides?: CallOverrides): Promise<[string]>;

    poolTokenInitFuncSelector(overrides?: CallOverrides): Promise<[string]>;

    'poolTokenInitFuncSelector()'(overrides?: CallOverrides): Promise<[string]>;

    priceOracle(overrides?: CallOverrides): Promise<[string]>;

    'priceOracle()'(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'renounceOwnership()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    repaymentImpl(overrides?: CallOverrides): Promise<[string]>;

    'repaymentImpl()'(overrides?: CallOverrides): Promise<[string]>;

    savingsAccount(overrides?: CallOverrides): Promise<[string]>;

    'savingsAccount()'(overrides?: CallOverrides): Promise<[string]>;

    setImplementations(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'setImplementations(address,address,address,address,address,address,address,address)'(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    strategyRegistry(overrides?: CallOverrides): Promise<[string]>;

    'strategyRegistry()'(overrides?: CallOverrides): Promise<[string]>;

    transferOwnership(newOwner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateBorrowRateLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateBorrowRateLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateCollateralRatioLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateCollateralRatioLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateCollectionPeriod(
      _collectionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateCollectionPeriod(uint256)'(
      _collectionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateGracePeriodPenaltyFraction(
      _gracePeriodPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateGracePeriodPenaltyFraction(uint256)'(
      _gracePeriodPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateLiquidatorRewardFraction(
      _liquidatorRewardFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateLiquidatorRewardFraction(uint256)'(
      _liquidatorRewardFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateMarginCallDuration(
      _marginCallDuration: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateMarginCallDuration(uint256)'(
      _marginCallDuration: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateMatchCollateralRatioInterval(
      _matchCollateralRatioInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateMatchCollateralRatioInterval(uint256)'(
      _matchCollateralRatioInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateMinBorrowFraction(
      _minBorrowFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateMinBorrowFraction(uint256)'(
      _minBorrowFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateNoOfRepaymentIntervalsLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateNoOfRepaymentIntervalsLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePoolCancelPenaltyFraction(
      _poolCancelPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updatePoolCancelPenaltyFraction(uint256)'(
      _poolCancelPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePoolLogic(_poolLogic: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'updatePoolLogic(address)'(
      _poolLogic: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePoolSizeLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updatePoolSizeLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePoolTokenImpl(_poolTokenImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'updatePoolTokenImpl(address)'(
      _poolTokenImpl: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePoolTokenInitFuncSelector(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updatePoolTokenInitFuncSelector(bytes4)'(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatePriceoracle(_priceOracle: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'updatePriceoracle(address)'(
      _priceOracle: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateProtocolFeeCollector(
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateProtocolFeeCollector(address)'(
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateProtocolFeeFraction(
      _protocolFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateProtocolFeeFraction(uint256)'(
      _protocolFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateRepaymentImpl(_repaymentImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'updateRepaymentImpl(address)'(
      _repaymentImpl: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateRepaymentIntervalLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateRepaymentIntervalLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateSavingsAccount(
      _savingsAccount: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateSavingsAccount(address)'(
      _savingsAccount: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateStrategyRegistry(
      _strategyRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateStrategyRegistry(address)'(
      _strategyRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateSupportedBorrowTokens(
      _borrowToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateSupportedBorrowTokens(address,bool)'(
      _borrowToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateSupportedCollateralTokens(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updateSupportedCollateralTokens(address,bool)'(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateUserRegistry(_userRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'updateUserRegistry(address)'(
      _userRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatedExtension(_extension: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    'updatedExtension(address)'(
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updatepoolInitFuncSelector(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    'updatepoolInitFuncSelector(bytes4)'(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    userRegistry(overrides?: CallOverrides): Promise<[string]>;

    'userRegistry()'(overrides?: CallOverrides): Promise<[string]>;

    votingPassRatio(overrides?: CallOverrides): Promise<[BigNumber]>;

    'votingPassRatio()'(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  MINTER_ROLE(overrides?: CallOverrides): Promise<string>;

  'MINTER_ROLE()'(overrides?: CallOverrides): Promise<string>;

  PAUSER_ROLE(overrides?: CallOverrides): Promise<string>;

  'PAUSER_ROLE()'(overrides?: CallOverrides): Promise<string>;

  collectionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

  'collectionPeriod()'(overrides?: CallOverrides): Promise<BigNumber>;

  createPool(
    _poolSize: BigNumberish,
    _borrowRate: BigNumberish,
    _borrowToken: string,
    _collateralToken: string,
    _collateralRatio: BigNumberish,
    _volatilityThreshold: BigNumberish,
    _repaymentInterval: BigNumberish,
    _noOfRepaymentIntervals: BigNumberish,
    _poolSavingsStrategy: string,
    _collateralAmount: BigNumberish,
    _transferFromSavingsAccount: boolean,
    _salt: BytesLike,
    _verifier: string,
    _lenderVerifier: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'createPool(uint256,uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,bool,bytes32,address,address)'(
    _poolSize: BigNumberish,
    _borrowRate: BigNumberish,
    _borrowToken: string,
    _collateralToken: string,
    _collateralRatio: BigNumberish,
    _volatilityThreshold: BigNumberish,
    _repaymentInterval: BigNumberish,
    _noOfRepaymentIntervals: BigNumberish,
    _poolSavingsStrategy: string,
    _collateralAmount: BigNumberish,
    _transferFromSavingsAccount: boolean,
    _salt: BytesLike,
    _verifier: string,
    _lenderVerifier: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  extension(overrides?: CallOverrides): Promise<string>;

  'extension()'(overrides?: CallOverrides): Promise<string>;

  getProtocolFeeData(overrides?: CallOverrides): Promise<[BigNumber, string]>;

  'getProtocolFeeData()'(overrides?: CallOverrides): Promise<[BigNumber, string]>;

  gracePeriodPenaltyFraction(overrides?: CallOverrides): Promise<BigNumber>;

  'gracePeriodPenaltyFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

  initialize(
    _admin: string,
    _collectionPeriod: BigNumberish,
    _matchCollateralRatioInterval: BigNumberish,
    _marginCallDuration: BigNumberish,
    _gracePeriodPenaltyFraction: BigNumberish,
    _poolInitFuncSelector: BytesLike,
    _poolTokenInitFuncSelector: BytesLike,
    _liquidatorRewardFraction: BigNumberish,
    _poolCancelPenaltyFraction: BigNumberish,
    _minBorrowFraction: BigNumberish,
    _protocolFeeFraction: BigNumberish,
    _protocolFeeCollector: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'initialize(address,uint256,uint256,uint256,uint256,bytes4,bytes4,uint256,uint256,uint256,uint256,address)'(
    _admin: string,
    _collectionPeriod: BigNumberish,
    _matchCollateralRatioInterval: BigNumberish,
    _marginCallDuration: BigNumberish,
    _gracePeriodPenaltyFraction: BigNumberish,
    _poolInitFuncSelector: BytesLike,
    _poolTokenInitFuncSelector: BytesLike,
    _liquidatorRewardFraction: BigNumberish,
    _poolCancelPenaltyFraction: BigNumberish,
    _minBorrowFraction: BigNumberish,
    _protocolFeeFraction: BigNumberish,
    _protocolFeeCollector: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  liquidatorRewardFraction(overrides?: CallOverrides): Promise<BigNumber>;

  'liquidatorRewardFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

  marginCallDuration(overrides?: CallOverrides): Promise<BigNumber>;

  'marginCallDuration()'(overrides?: CallOverrides): Promise<BigNumber>;

  matchCollateralRatioInterval(overrides?: CallOverrides): Promise<BigNumber>;

  'matchCollateralRatioInterval()'(overrides?: CallOverrides): Promise<BigNumber>;

  minBorrowFraction(overrides?: CallOverrides): Promise<BigNumber>;

  'minBorrowFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  'owner()'(overrides?: CallOverrides): Promise<string>;

  poolCancelPenaltyFraction(overrides?: CallOverrides): Promise<BigNumber>;

  'poolCancelPenaltyFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

  poolImpl(overrides?: CallOverrides): Promise<string>;

  'poolImpl()'(overrides?: CallOverrides): Promise<string>;

  poolInitFuncSelector(overrides?: CallOverrides): Promise<string>;

  'poolInitFuncSelector()'(overrides?: CallOverrides): Promise<string>;

  poolRegistry(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  'poolRegistry(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  poolTokenImpl(overrides?: CallOverrides): Promise<string>;

  'poolTokenImpl()'(overrides?: CallOverrides): Promise<string>;

  poolTokenInitFuncSelector(overrides?: CallOverrides): Promise<string>;

  'poolTokenInitFuncSelector()'(overrides?: CallOverrides): Promise<string>;

  priceOracle(overrides?: CallOverrides): Promise<string>;

  'priceOracle()'(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'renounceOwnership()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  repaymentImpl(overrides?: CallOverrides): Promise<string>;

  'repaymentImpl()'(overrides?: CallOverrides): Promise<string>;

  savingsAccount(overrides?: CallOverrides): Promise<string>;

  'savingsAccount()'(overrides?: CallOverrides): Promise<string>;

  setImplementations(
    _poolImpl: string,
    _repaymentImpl: string,
    _poolTokenImpl: string,
    _userRegistry: string,
    _strategyRegistry: string,
    _priceOracle: string,
    _savingsAccount: string,
    _extension: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'setImplementations(address,address,address,address,address,address,address,address)'(
    _poolImpl: string,
    _repaymentImpl: string,
    _poolTokenImpl: string,
    _userRegistry: string,
    _strategyRegistry: string,
    _priceOracle: string,
    _savingsAccount: string,
    _extension: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  strategyRegistry(overrides?: CallOverrides): Promise<string>;

  'strategyRegistry()'(overrides?: CallOverrides): Promise<string>;

  transferOwnership(newOwner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'transferOwnership(address)'(newOwner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  updateBorrowRateLimit(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateBorrowRateLimit(uint256,uint256)'(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateCollateralRatioLimit(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateCollateralRatioLimit(uint256,uint256)'(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateCollectionPeriod(
    _collectionPeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateCollectionPeriod(uint256)'(
    _collectionPeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateGracePeriodPenaltyFraction(
    _gracePeriodPenaltyFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateGracePeriodPenaltyFraction(uint256)'(
    _gracePeriodPenaltyFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateLiquidatorRewardFraction(
    _liquidatorRewardFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateLiquidatorRewardFraction(uint256)'(
    _liquidatorRewardFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateMarginCallDuration(
    _marginCallDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateMarginCallDuration(uint256)'(
    _marginCallDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateMatchCollateralRatioInterval(
    _matchCollateralRatioInterval: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateMatchCollateralRatioInterval(uint256)'(
    _matchCollateralRatioInterval: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateMinBorrowFraction(
    _minBorrowFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateMinBorrowFraction(uint256)'(
    _minBorrowFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateNoOfRepaymentIntervalsLimit(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateNoOfRepaymentIntervalsLimit(uint256,uint256)'(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatePoolCancelPenaltyFraction(
    _poolCancelPenaltyFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updatePoolCancelPenaltyFraction(uint256)'(
    _poolCancelPenaltyFraction: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatePoolLogic(_poolLogic: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updatePoolLogic(address)'(_poolLogic: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  updatePoolSizeLimit(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updatePoolSizeLimit(uint256,uint256)'(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatePoolTokenImpl(_poolTokenImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updatePoolTokenImpl(address)'(
    _poolTokenImpl: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatePoolTokenInitFuncSelector(
    _functionId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updatePoolTokenInitFuncSelector(bytes4)'(
    _functionId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatePriceoracle(_priceOracle: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updatePriceoracle(address)'(
    _priceOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateProtocolFeeCollector(
    _protocolFeeCollector: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateProtocolFeeCollector(address)'(
    _protocolFeeCollector: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateProtocolFeeFraction(
    _protocolFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateProtocolFeeFraction(uint256)'(
    _protocolFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateRepaymentImpl(_repaymentImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updateRepaymentImpl(address)'(
    _repaymentImpl: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateRepaymentIntervalLimit(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateRepaymentIntervalLimit(uint256,uint256)'(
    _min: BigNumberish,
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateSavingsAccount(_savingsAccount: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updateSavingsAccount(address)'(
    _savingsAccount: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateStrategyRegistry(
    _strategyRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateStrategyRegistry(address)'(
    _strategyRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateSupportedBorrowTokens(
    _borrowToken: string,
    _isSupported: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateSupportedBorrowTokens(address,bool)'(
    _borrowToken: string,
    _isSupported: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateSupportedCollateralTokens(
    _collateralToken: string,
    _isSupported: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updateSupportedCollateralTokens(address,bool)'(
    _collateralToken: string,
    _isSupported: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateUserRegistry(_userRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updateUserRegistry(address)'(
    _userRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatedExtension(_extension: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  'updatedExtension(address)'(
    _extension: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updatepoolInitFuncSelector(
    _functionId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  'updatepoolInitFuncSelector(bytes4)'(
    _functionId: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  userRegistry(overrides?: CallOverrides): Promise<string>;

  'userRegistry()'(overrides?: CallOverrides): Promise<string>;

  votingPassRatio(overrides?: CallOverrides): Promise<BigNumber>;

  'votingPassRatio()'(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    MINTER_ROLE(overrides?: CallOverrides): Promise<string>;

    'MINTER_ROLE()'(overrides?: CallOverrides): Promise<string>;

    PAUSER_ROLE(overrides?: CallOverrides): Promise<string>;

    'PAUSER_ROLE()'(overrides?: CallOverrides): Promise<string>;

    collectionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    'collectionPeriod()'(overrides?: CallOverrides): Promise<BigNumber>;

    createPool(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'createPool(uint256,uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,bool,bytes32,address,address)'(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: CallOverrides
    ): Promise<void>;

    extension(overrides?: CallOverrides): Promise<string>;

    'extension()'(overrides?: CallOverrides): Promise<string>;

    getProtocolFeeData(overrides?: CallOverrides): Promise<[BigNumber, string]>;

    'getProtocolFeeData()'(overrides?: CallOverrides): Promise<[BigNumber, string]>;

    gracePeriodPenaltyFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'gracePeriodPenaltyFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'initialize(address,uint256,uint256,uint256,uint256,bytes4,bytes4,uint256,uint256,uint256,uint256,address)'(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidatorRewardFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'liquidatorRewardFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    marginCallDuration(overrides?: CallOverrides): Promise<BigNumber>;

    'marginCallDuration()'(overrides?: CallOverrides): Promise<BigNumber>;

    matchCollateralRatioInterval(overrides?: CallOverrides): Promise<BigNumber>;

    'matchCollateralRatioInterval()'(overrides?: CallOverrides): Promise<BigNumber>;

    minBorrowFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'minBorrowFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    'owner()'(overrides?: CallOverrides): Promise<string>;

    poolCancelPenaltyFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'poolCancelPenaltyFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolImpl(overrides?: CallOverrides): Promise<string>;

    'poolImpl()'(overrides?: CallOverrides): Promise<string>;

    poolInitFuncSelector(overrides?: CallOverrides): Promise<string>;

    'poolInitFuncSelector()'(overrides?: CallOverrides): Promise<string>;

    poolRegistry(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    'poolRegistry(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    poolTokenImpl(overrides?: CallOverrides): Promise<string>;

    'poolTokenImpl()'(overrides?: CallOverrides): Promise<string>;

    poolTokenInitFuncSelector(overrides?: CallOverrides): Promise<string>;

    'poolTokenInitFuncSelector()'(overrides?: CallOverrides): Promise<string>;

    priceOracle(overrides?: CallOverrides): Promise<string>;

    'priceOracle()'(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    'renounceOwnership()'(overrides?: CallOverrides): Promise<void>;

    repaymentImpl(overrides?: CallOverrides): Promise<string>;

    'repaymentImpl()'(overrides?: CallOverrides): Promise<string>;

    savingsAccount(overrides?: CallOverrides): Promise<string>;

    'savingsAccount()'(overrides?: CallOverrides): Promise<string>;

    setImplementations(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: CallOverrides
    ): Promise<void>;

    'setImplementations(address,address,address,address,address,address,address,address)'(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: CallOverrides
    ): Promise<void>;

    strategyRegistry(overrides?: CallOverrides): Promise<string>;

    'strategyRegistry()'(overrides?: CallOverrides): Promise<string>;

    transferOwnership(newOwner: string, overrides?: CallOverrides): Promise<void>;

    'transferOwnership(address)'(newOwner: string, overrides?: CallOverrides): Promise<void>;

    updateBorrowRateLimit(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateBorrowRateLimit(uint256,uint256)'(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateCollateralRatioLimit(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateCollateralRatioLimit(uint256,uint256)'(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateCollectionPeriod(_collectionPeriod: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateCollectionPeriod(uint256)'(_collectionPeriod: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateGracePeriodPenaltyFraction(_gracePeriodPenaltyFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateGracePeriodPenaltyFraction(uint256)'(_gracePeriodPenaltyFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateLiquidatorRewardFraction(_liquidatorRewardFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateLiquidatorRewardFraction(uint256)'(_liquidatorRewardFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateMarginCallDuration(_marginCallDuration: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateMarginCallDuration(uint256)'(_marginCallDuration: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateMatchCollateralRatioInterval(_matchCollateralRatioInterval: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateMatchCollateralRatioInterval(uint256)'(_matchCollateralRatioInterval: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateMinBorrowFraction(_minBorrowFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateMinBorrowFraction(uint256)'(_minBorrowFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateNoOfRepaymentIntervalsLimit(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateNoOfRepaymentIntervalsLimit(uint256,uint256)'(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updatePoolCancelPenaltyFraction(_poolCancelPenaltyFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updatePoolCancelPenaltyFraction(uint256)'(_poolCancelPenaltyFraction: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updatePoolLogic(_poolLogic: string, overrides?: CallOverrides): Promise<void>;

    'updatePoolLogic(address)'(_poolLogic: string, overrides?: CallOverrides): Promise<void>;

    updatePoolSizeLimit(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updatePoolSizeLimit(uint256,uint256)'(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updatePoolTokenImpl(_poolTokenImpl: string, overrides?: CallOverrides): Promise<void>;

    'updatePoolTokenImpl(address)'(_poolTokenImpl: string, overrides?: CallOverrides): Promise<void>;

    updatePoolTokenInitFuncSelector(_functionId: BytesLike, overrides?: CallOverrides): Promise<void>;

    'updatePoolTokenInitFuncSelector(bytes4)'(_functionId: BytesLike, overrides?: CallOverrides): Promise<void>;

    updatePriceoracle(_priceOracle: string, overrides?: CallOverrides): Promise<void>;

    'updatePriceoracle(address)'(_priceOracle: string, overrides?: CallOverrides): Promise<void>;

    updateProtocolFeeCollector(_protocolFeeCollector: string, overrides?: CallOverrides): Promise<void>;

    'updateProtocolFeeCollector(address)'(_protocolFeeCollector: string, overrides?: CallOverrides): Promise<void>;

    updateProtocolFeeFraction(_protocolFee: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateProtocolFeeFraction(uint256)'(_protocolFee: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateRepaymentImpl(_repaymentImpl: string, overrides?: CallOverrides): Promise<void>;

    'updateRepaymentImpl(address)'(_repaymentImpl: string, overrides?: CallOverrides): Promise<void>;

    updateRepaymentIntervalLimit(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    'updateRepaymentIntervalLimit(uint256,uint256)'(_min: BigNumberish, _max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateSavingsAccount(_savingsAccount: string, overrides?: CallOverrides): Promise<void>;

    'updateSavingsAccount(address)'(_savingsAccount: string, overrides?: CallOverrides): Promise<void>;

    updateStrategyRegistry(_strategyRegistry: string, overrides?: CallOverrides): Promise<void>;

    'updateStrategyRegistry(address)'(_strategyRegistry: string, overrides?: CallOverrides): Promise<void>;

    updateSupportedBorrowTokens(_borrowToken: string, _isSupported: boolean, overrides?: CallOverrides): Promise<void>;

    'updateSupportedBorrowTokens(address,bool)'(_borrowToken: string, _isSupported: boolean, overrides?: CallOverrides): Promise<void>;

    updateSupportedCollateralTokens(_collateralToken: string, _isSupported: boolean, overrides?: CallOverrides): Promise<void>;

    'updateSupportedCollateralTokens(address,bool)'(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    updateUserRegistry(_userRegistry: string, overrides?: CallOverrides): Promise<void>;

    'updateUserRegistry(address)'(_userRegistry: string, overrides?: CallOverrides): Promise<void>;

    updatedExtension(_extension: string, overrides?: CallOverrides): Promise<void>;

    'updatedExtension(address)'(_extension: string, overrides?: CallOverrides): Promise<void>;

    updatepoolInitFuncSelector(_functionId: BytesLike, overrides?: CallOverrides): Promise<void>;

    'updatepoolInitFuncSelector(bytes4)'(_functionId: BytesLike, overrides?: CallOverrides): Promise<void>;

    userRegistry(overrides?: CallOverrides): Promise<string>;

    'userRegistry()'(overrides?: CallOverrides): Promise<string>;

    votingPassRatio(overrides?: CallOverrides): Promise<BigNumber>;

    'votingPassRatio()'(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    BorrowTokenUpdated(
      borrowToken: null,
      isSupported: null
    ): TypedEventFilter<[string, boolean], { borrowToken: string; isSupported: boolean }>;

    CollateralTokenUpdated(
      collateralToken: null,
      isSupported: null
    ): TypedEventFilter<[string, boolean], { collateralToken: string; isSupported: boolean }>;

    CollectionPeriodUpdated(updatedCollectionPeriod: null): TypedEventFilter<[BigNumber], { updatedCollectionPeriod: BigNumber }>;

    ExtensionImplUpdated(updatedExtension: null): TypedEventFilter<[string], { updatedExtension: string }>;

    GracePeriodPenaltyFractionUpdated(
      updatedGracePeriodPenaltyFraction: null
    ): TypedEventFilter<[BigNumber], { updatedGracePeriodPenaltyFraction: BigNumber }>;

    LimitsUpdated(
      limitType: null,
      max: null,
      min: null
    ): TypedEventFilter<[string, BigNumber, BigNumber], { limitType: string; max: BigNumber; min: BigNumber }>;

    LiquidatorRewardFractionUpdated(
      updatedLiquidatorRewardFraction: null
    ): TypedEventFilter<[BigNumber], { updatedLiquidatorRewardFraction: BigNumber }>;

    MarginCallDurationUpdated(updatedMarginCallDuration: null): TypedEventFilter<[BigNumber], { updatedMarginCallDuration: BigNumber }>;

    MatchCollateralRatioIntervalUpdated(
      updatedMatchCollateralRatioInterval: null
    ): TypedEventFilter<[BigNumber], { updatedMatchCollateralRatioInterval: BigNumber }>;

    MinBorrowFractionUpdated(updatedMinBorrowFraction: null): TypedEventFilter<[BigNumber], { updatedMinBorrowFraction: BigNumber }>;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<[string, string], { previousOwner: string; newOwner: string }>;

    PoolCancelPenaltyFractionUpdated(
      updatedPoolCancelPenaltyFraction: null
    ): TypedEventFilter<[BigNumber], { updatedPoolCancelPenaltyFraction: BigNumber }>;

    PoolCreated(
      pool: null,
      borrower: null,
      poolToken: null
    ): TypedEventFilter<[string, string, string], { pool: string; borrower: string; poolToken: string }>;

    PoolInitSelectorUpdated(updatedSelector: null): TypedEventFilter<[string], { updatedSelector: string }>;

    PoolLogicUpdated(updatedPoolLogic: null): TypedEventFilter<[string], { updatedPoolLogic: string }>;

    PoolTokenImplUpdated(updatedPoolTokenImpl: null): TypedEventFilter<[string], { updatedPoolTokenImpl: string }>;

    PoolTokenInitFuncSelector(updatedSelector: null): TypedEventFilter<[string], { updatedSelector: string }>;

    PriceOracleUpdated(updatedPriceOracle: null): TypedEventFilter<[string], { updatedPriceOracle: string }>;

    ProtocolFeeCollectorUpdated(updatedProtocolFeeCollector: null): TypedEventFilter<[string], { updatedProtocolFeeCollector: string }>;

    ProtocolFeeFractionUpdated(updatedProtocolFee: null): TypedEventFilter<[BigNumber], { updatedProtocolFee: BigNumber }>;

    RepaymentImplUpdated(updatedRepaymentImpl: null): TypedEventFilter<[string], { updatedRepaymentImpl: string }>;

    SavingsAccountUpdated(savingsAccount: null): TypedEventFilter<[string], { savingsAccount: string }>;

    StrategyRegistryUpdated(updatedStrategyRegistry: null): TypedEventFilter<[string], { updatedStrategyRegistry: string }>;

    UserRegistryUpdated(updatedBorrowerRegistry: null): TypedEventFilter<[string], { updatedBorrowerRegistry: string }>;
  };

  estimateGas: {
    MINTER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    'MINTER_ROLE()'(overrides?: CallOverrides): Promise<BigNumber>;

    PAUSER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    'PAUSER_ROLE()'(overrides?: CallOverrides): Promise<BigNumber>;

    collectionPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    'collectionPeriod()'(overrides?: CallOverrides): Promise<BigNumber>;

    createPool(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'createPool(uint256,uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,bool,bytes32,address,address)'(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    extension(overrides?: CallOverrides): Promise<BigNumber>;

    'extension()'(overrides?: CallOverrides): Promise<BigNumber>;

    getProtocolFeeData(overrides?: CallOverrides): Promise<BigNumber>;

    'getProtocolFeeData()'(overrides?: CallOverrides): Promise<BigNumber>;

    gracePeriodPenaltyFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'gracePeriodPenaltyFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'initialize(address,uint256,uint256,uint256,uint256,bytes4,bytes4,uint256,uint256,uint256,uint256,address)'(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    liquidatorRewardFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'liquidatorRewardFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    marginCallDuration(overrides?: CallOverrides): Promise<BigNumber>;

    'marginCallDuration()'(overrides?: CallOverrides): Promise<BigNumber>;

    matchCollateralRatioInterval(overrides?: CallOverrides): Promise<BigNumber>;

    'matchCollateralRatioInterval()'(overrides?: CallOverrides): Promise<BigNumber>;

    minBorrowFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'minBorrowFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolCancelPenaltyFraction(overrides?: CallOverrides): Promise<BigNumber>;

    'poolCancelPenaltyFraction()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolImpl(overrides?: CallOverrides): Promise<BigNumber>;

    'poolImpl()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolInitFuncSelector(overrides?: CallOverrides): Promise<BigNumber>;

    'poolInitFuncSelector()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolRegistry(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    'poolRegistry(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    poolTokenImpl(overrides?: CallOverrides): Promise<BigNumber>;

    'poolTokenImpl()'(overrides?: CallOverrides): Promise<BigNumber>;

    poolTokenInitFuncSelector(overrides?: CallOverrides): Promise<BigNumber>;

    'poolTokenInitFuncSelector()'(overrides?: CallOverrides): Promise<BigNumber>;

    priceOracle(overrides?: CallOverrides): Promise<BigNumber>;

    'priceOracle()'(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'renounceOwnership()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    repaymentImpl(overrides?: CallOverrides): Promise<BigNumber>;

    'repaymentImpl()'(overrides?: CallOverrides): Promise<BigNumber>;

    savingsAccount(overrides?: CallOverrides): Promise<BigNumber>;

    'savingsAccount()'(overrides?: CallOverrides): Promise<BigNumber>;

    setImplementations(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'setImplementations(address,address,address,address,address,address,address,address)'(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    strategyRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    'strategyRegistry()'(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(newOwner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'transferOwnership(address)'(newOwner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updateBorrowRateLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateBorrowRateLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateCollateralRatioLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateCollateralRatioLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateCollectionPeriod(
      _collectionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateCollectionPeriod(uint256)'(
      _collectionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateGracePeriodPenaltyFraction(
      _gracePeriodPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateGracePeriodPenaltyFraction(uint256)'(
      _gracePeriodPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateLiquidatorRewardFraction(
      _liquidatorRewardFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateLiquidatorRewardFraction(uint256)'(
      _liquidatorRewardFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateMarginCallDuration(
      _marginCallDuration: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateMarginCallDuration(uint256)'(
      _marginCallDuration: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateMatchCollateralRatioInterval(
      _matchCollateralRatioInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateMatchCollateralRatioInterval(uint256)'(
      _matchCollateralRatioInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateMinBorrowFraction(
      _minBorrowFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateMinBorrowFraction(uint256)'(
      _minBorrowFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateNoOfRepaymentIntervalsLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateNoOfRepaymentIntervalsLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updatePoolCancelPenaltyFraction(
      _poolCancelPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updatePoolCancelPenaltyFraction(uint256)'(
      _poolCancelPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updatePoolLogic(_poolLogic: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updatePoolLogic(address)'(_poolLogic: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updatePoolSizeLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updatePoolSizeLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updatePoolTokenImpl(_poolTokenImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updatePoolTokenImpl(address)'(_poolTokenImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updatePoolTokenInitFuncSelector(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updatePoolTokenInitFuncSelector(bytes4)'(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updatePriceoracle(_priceOracle: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updatePriceoracle(address)'(_priceOracle: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updateProtocolFeeCollector(
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateProtocolFeeCollector(address)'(
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateProtocolFeeFraction(_protocolFee: BigNumberish, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updateProtocolFeeFraction(uint256)'(
      _protocolFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateRepaymentImpl(_repaymentImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updateRepaymentImpl(address)'(_repaymentImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updateRepaymentIntervalLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateRepaymentIntervalLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateSavingsAccount(_savingsAccount: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updateSavingsAccount(address)'(
      _savingsAccount: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateStrategyRegistry(_strategyRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updateStrategyRegistry(address)'(
      _strategyRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateSupportedBorrowTokens(
      _borrowToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateSupportedBorrowTokens(address,bool)'(
      _borrowToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateSupportedCollateralTokens(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    'updateSupportedCollateralTokens(address,bool)'(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateUserRegistry(_userRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updateUserRegistry(address)'(_userRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updatedExtension(_extension: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updatedExtension(address)'(_extension: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updatepoolInitFuncSelector(_functionId: BytesLike, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    'updatepoolInitFuncSelector(bytes4)'(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    userRegistry(overrides?: CallOverrides): Promise<BigNumber>;

    'userRegistry()'(overrides?: CallOverrides): Promise<BigNumber>;

    votingPassRatio(overrides?: CallOverrides): Promise<BigNumber>;

    'votingPassRatio()'(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    MINTER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'MINTER_ROLE()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PAUSER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'PAUSER_ROLE()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    collectionPeriod(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'collectionPeriod()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    createPool(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'createPool(uint256,uint256,address,address,uint256,uint256,uint256,uint256,address,uint256,bool,bytes32,address,address)'(
      _poolSize: BigNumberish,
      _borrowRate: BigNumberish,
      _borrowToken: string,
      _collateralToken: string,
      _collateralRatio: BigNumberish,
      _volatilityThreshold: BigNumberish,
      _repaymentInterval: BigNumberish,
      _noOfRepaymentIntervals: BigNumberish,
      _poolSavingsStrategy: string,
      _collateralAmount: BigNumberish,
      _transferFromSavingsAccount: boolean,
      _salt: BytesLike,
      _verifier: string,
      _lenderVerifier: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    extension(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'extension()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProtocolFeeData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'getProtocolFeeData()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    gracePeriodPenaltyFraction(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'gracePeriodPenaltyFraction()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'initialize(address,uint256,uint256,uint256,uint256,bytes4,bytes4,uint256,uint256,uint256,uint256,address)'(
      _admin: string,
      _collectionPeriod: BigNumberish,
      _matchCollateralRatioInterval: BigNumberish,
      _marginCallDuration: BigNumberish,
      _gracePeriodPenaltyFraction: BigNumberish,
      _poolInitFuncSelector: BytesLike,
      _poolTokenInitFuncSelector: BytesLike,
      _liquidatorRewardFraction: BigNumberish,
      _poolCancelPenaltyFraction: BigNumberish,
      _minBorrowFraction: BigNumberish,
      _protocolFeeFraction: BigNumberish,
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    liquidatorRewardFraction(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'liquidatorRewardFraction()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    marginCallDuration(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'marginCallDuration()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    matchCollateralRatioInterval(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'matchCollateralRatioInterval()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    minBorrowFraction(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'minBorrowFraction()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolCancelPenaltyFraction(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolCancelPenaltyFraction()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolImpl()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolInitFuncSelector(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolInitFuncSelector()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolRegistry(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolRegistry(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolTokenImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolTokenImpl()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolTokenInitFuncSelector(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'poolTokenInitFuncSelector()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceOracle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'priceOracle()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'renounceOwnership()'(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    repaymentImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'repaymentImpl()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    savingsAccount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'savingsAccount()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setImplementations(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'setImplementations(address,address,address,address,address,address,address,address)'(
      _poolImpl: string,
      _repaymentImpl: string,
      _poolTokenImpl: string,
      _userRegistry: string,
      _strategyRegistry: string,
      _priceOracle: string,
      _savingsAccount: string,
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    strategyRegistry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'strategyRegistry()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(newOwner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateBorrowRateLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateBorrowRateLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateCollateralRatioLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateCollateralRatioLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateCollectionPeriod(
      _collectionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateCollectionPeriod(uint256)'(
      _collectionPeriod: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateGracePeriodPenaltyFraction(
      _gracePeriodPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateGracePeriodPenaltyFraction(uint256)'(
      _gracePeriodPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateLiquidatorRewardFraction(
      _liquidatorRewardFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateLiquidatorRewardFraction(uint256)'(
      _liquidatorRewardFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateMarginCallDuration(
      _marginCallDuration: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateMarginCallDuration(uint256)'(
      _marginCallDuration: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateMatchCollateralRatioInterval(
      _matchCollateralRatioInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateMatchCollateralRatioInterval(uint256)'(
      _matchCollateralRatioInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateMinBorrowFraction(
      _minBorrowFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateMinBorrowFraction(uint256)'(
      _minBorrowFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateNoOfRepaymentIntervalsLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateNoOfRepaymentIntervalsLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePoolCancelPenaltyFraction(
      _poolCancelPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updatePoolCancelPenaltyFraction(uint256)'(
      _poolCancelPenaltyFraction: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePoolLogic(_poolLogic: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'updatePoolLogic(address)'(
      _poolLogic: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePoolSizeLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updatePoolSizeLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePoolTokenImpl(_poolTokenImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'updatePoolTokenImpl(address)'(
      _poolTokenImpl: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePoolTokenInitFuncSelector(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updatePoolTokenInitFuncSelector(bytes4)'(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatePriceoracle(_priceOracle: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'updatePriceoracle(address)'(
      _priceOracle: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateProtocolFeeCollector(
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateProtocolFeeCollector(address)'(
      _protocolFeeCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateProtocolFeeFraction(
      _protocolFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateProtocolFeeFraction(uint256)'(
      _protocolFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateRepaymentImpl(_repaymentImpl: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'updateRepaymentImpl(address)'(
      _repaymentImpl: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateRepaymentIntervalLimit(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateRepaymentIntervalLimit(uint256,uint256)'(
      _min: BigNumberish,
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateSavingsAccount(
      _savingsAccount: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateSavingsAccount(address)'(
      _savingsAccount: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateStrategyRegistry(
      _strategyRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateStrategyRegistry(address)'(
      _strategyRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateSupportedBorrowTokens(
      _borrowToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateSupportedBorrowTokens(address,bool)'(
      _borrowToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateSupportedCollateralTokens(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updateSupportedCollateralTokens(address,bool)'(
      _collateralToken: string,
      _isSupported: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateUserRegistry(_userRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'updateUserRegistry(address)'(
      _userRegistry: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatedExtension(_extension: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    'updatedExtension(address)'(
      _extension: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updatepoolInitFuncSelector(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    'updatepoolInitFuncSelector(bytes4)'(
      _functionId: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    userRegistry(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'userRegistry()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    votingPassRatio(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'votingPassRatio()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
